/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ProfessorWorkArea;

import Database.DatabaseConnection;
import ProfessorWorkArea.CreateCourseJPanel;
import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ui.MainJFrame;

/**
 *
 * @author Abhinav Uni
 */
public class UpdateLectureJPanel extends javax.swing.JPanel {

    MainJFrame mainframe;
    private String selectedNUID;
    private String selectedCourse;
    /**
     * Creates new form AddLectureJPanel
     */
    public UpdateLectureJPanel(MainJFrame mainframe,String selectedCourse,String selectedNUID) {
        initComponents();
        
        this.selectedNUID = selectedNUID;
        this.selectedCourse = selectedCourse;
        this.mainframe = mainframe;
        displayLecures();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void displayLecures() {
        try {
            Connection connection = (Connection)DatabaseConnection.getConnection();
            Integer courseid = Integer.parseInt(selectedCourse);
            String sql = "SELECT lecturename, lecture_desc,  lecture_link ,lectureid FROM lectures WHERE courseid = ?";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setInt(1, courseid);

            ResultSet resultSet = preparedStatement.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tblLectures.getModel();

            // Clear any existing rows in the table
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }

            // Add rows from the result set to the table
            while (resultSet.next()) {
                Vector<String> row = new Vector<>();
                row.add(resultSet.getString("lectureid"));
                row.add(resultSet.getString("lecturename"));
                row.add(resultSet.getString("lecture_desc"));
                row.add(resultSet.getString("lecture_link"));
                
                model.addRow(row);
            }

            resultSet.close();
            preparedStatement.close();
//            DatabaseConnection.closeConnection(connection);

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error retrieving course data.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void upadtelectures(Integer lectureId,String newLectureName,String newLectureDesc,String newLectureLink){
         try {
        Connection connection = (Connection) DatabaseConnection.getConnection();

        String sql = "UPDATE lectures SET lecturename = ?, lecture_desc = ?, lecture_link = ? WHERE lectureid = ?";
        PreparedStatement preparedStatement = connection.prepareStatement(sql);

        preparedStatement.setString(1, newLectureName);
        preparedStatement.setString(2, newLectureDesc);
        preparedStatement.setString(3, newLectureLink);
        preparedStatement.setInt(4, lectureId);

        int rowsUpdated = preparedStatement.executeUpdate();
        if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(this, "Record updated successfully");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update record", "Error", JOptionPane.ERROR_MESSAGE);
        }

        preparedStatement.close();
        // Close the connection if needed

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error updating record", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblLectureName1 = new javax.swing.JLabel();
        txtLectureName = new javax.swing.JTextField();
        lbllecturelink1 = new javax.swing.JLabel();
        txtLectureLink = new javax.swing.JTextField();
        lblLectureDesc1 = new javax.swing.JLabel();
        txtLectureDesc = new javax.swing.JTextField();
        btnAddLecture = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLectures = new javax.swing.JTable();
        btnView = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 34)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Update Lectures");

        lblLectureName1.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        lblLectureName1.setForeground(new java.awt.Color(153, 153, 153));
        lblLectureName1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLectureName1.setText("Lecture Name :");

        txtLectureName.setBackground(new java.awt.Color(0, 0, 0));
        txtLectureName.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        txtLectureName.setForeground(new java.awt.Color(255, 255, 255));
        txtLectureName.setBorder(null);

        lbllecturelink1.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        lbllecturelink1.setForeground(new java.awt.Color(153, 153, 153));
        lbllecturelink1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbllecturelink1.setText("lecture Link :");

        txtLectureLink.setBackground(new java.awt.Color(0, 0, 0));
        txtLectureLink.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        txtLectureLink.setForeground(new java.awt.Color(255, 255, 255));
        txtLectureLink.setBorder(null);
        txtLectureLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLectureLinkActionPerformed(evt);
            }
        });

        lblLectureDesc1.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        lblLectureDesc1.setForeground(new java.awt.Color(153, 153, 153));
        lblLectureDesc1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLectureDesc1.setText("Lecture Desc :");

        txtLectureDesc.setBackground(new java.awt.Color(0, 0, 0));
        txtLectureDesc.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        txtLectureDesc.setForeground(new java.awt.Color(255, 255, 255));
        txtLectureDesc.setBorder(null);

        btnAddLecture.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnAddLecture.setForeground(new java.awt.Color(0, 102, 102));
        btnAddLecture.setText("Add Lecture");
        btnAddLecture.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddLecture.setBorderPainted(false);
        btnAddLecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLectureActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 102, 51));
        btnBack.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back (1).png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(null);
        btnBack.setBorderPainted(false);
        btnBack.setContentAreaFilled(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnSave.setText("Update");
        btnSave.setBorder(null);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tblLectures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "LectureID", "LectureName", "Lecture Decsription", "LectureLink"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblLectures);

        btnView.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnView.setText("View");
        btnView.setBorder(null);
        btnView.setBorderPainted(false);
        btnView.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblLectureName1)
                .addGap(41, 41, 41)
                .addComponent(txtLectureName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(lbllecturelink1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtLectureLink, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(btnAddLecture, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLectureDesc1)
                                .addGap(50, 50, 50)
                                .addComponent(txtLectureDesc))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLectureName1)
                    .addComponent(txtLectureName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbllecturelink1)
                    .addComponent(txtLectureLink, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLectureDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLectureDesc1))
                .addGap(27, 27, 27)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddLecture, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddLecture, btnSave});

    }// </editor-fold>//GEN-END:initComponents

    private void txtLectureLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLectureLinkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLectureLinkActionPerformed

    private void btnAddLectureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLectureActionPerformed
        // TODO add your handling code here:
        CreateLectureJPanel createLecture = new CreateLectureJPanel(mainframe,Integer.parseInt(selectedCourse),selectedNUID);
        mainframe.setRightComponent(createLecture);
    }//GEN-LAST:event_btnAddLectureActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        UpdateMyCourseJPanel updatecourse= new UpdateMyCourseJPanel(mainframe, selectedNUID, selectedCourse);
        mainframe.setRightComponent(updatecourse);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
           // TODO add your handling code here:
           
        int selectedRowIndex = tblLectures.getSelectedRow();

    if (selectedRowIndex < 0) {
        JOptionPane.showMessageDialog(this, "Please select a row to update");
        return;
    }

    DefaultTableModel model = (DefaultTableModel) tblLectures.getModel();

    // Assuming you have text fields named txtLectureName, txtLectureDesc, and txtLectureLink
    String newLectureName = txtLectureName.getText();
    String newLectureDesc = txtLectureDesc.getText();
    String newLectureLink = txtLectureLink.getText();

    // Assuming your table has a column for lectureid, get the lectureid of the selected row
    Integer lectureId = Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString());
    
    upadtelectures(lectureId,newLectureName,newLectureDesc,newLectureLink);
    displayLecures();
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
       
          // TODO add your handling code here:
        int SelectedRowIndex = tblLectures.getSelectedRow();
         
         if(SelectedRowIndex<0)
         {
             JOptionPane.showMessageDialog(this, "Plesae select a row to delete");
             return;
         }
         
         DefaultTableModel model = (DefaultTableModel) tblLectures.getModel();
      
         
           txtLectureName.setText(model.getValueAt(SelectedRowIndex, 0).toString());
          txtLectureDesc.setText(model.getValueAt(SelectedRowIndex, 1).toString());
          txtLectureLink.setText(model.getValueAt(SelectedRowIndex, 2).toString());
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLecture;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblLectureDesc1;
    private javax.swing.JLabel lblLectureName1;
    private javax.swing.JLabel lbllecturelink1;
    private javax.swing.JTable tblLectures;
    private javax.swing.JTextField txtLectureDesc;
    private javax.swing.JTextField txtLectureLink;
    private javax.swing.JTextField txtLectureName;
    // End of variables declaration//GEN-END:variables
}
