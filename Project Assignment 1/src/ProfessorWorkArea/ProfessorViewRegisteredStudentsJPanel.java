/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ProfessorWorkArea;

import Database.DatabaseConnection;
import ProfessorWorkArea.MyCoursesJPanel;
import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ui.MainJFrame;

/**
 *
 * @author Abhinav Uni
 */
public class ProfessorViewRegisteredStudentsJPanel extends javax.swing.JPanel {
    
    MainJFrame mainframe;
    private String selectedNUID;
    private String selectedCourse;

    /**
     * Creates new form ProfessorViewCourseStudentsJPanel
     */
    public ProfessorViewRegisteredStudentsJPanel(MainJFrame mainframe, String selectedNUID,String selectedCourse) {
        initComponents();
        
        this.mainframe = mainframe;
        this.selectedCourse = selectedCourse;
        this.selectedNUID = selectedNUID;
        displayCourseDataForProfessor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void displayCourseDataForProfessor() {
       try {
    Connection connection = (Connection) DatabaseConnection.getConnection();
    Integer selectedCourseID = Integer.parseInt(selectedCourse);

    // Define the SQL query to retrieve data from coursesregistered table, join with users table, and fetch course information
    String sql = "SELECT cr.nuid, cr.grade, cr.student_rank, u.name, c.semester, c.year, c.coursename " +
                 "FROM coursesregistered cr " +
                 "INNER JOIN users u ON cr.nuid = u.nuid " +
                 "INNER JOIN courses c ON cr.courseid = c.courseid " +
                 "WHERE cr.courseid = ?";

    PreparedStatement preparedStatement = connection.prepareStatement(sql);
    preparedStatement.setInt(1, selectedCourseID);

    ResultSet resultSet = preparedStatement.executeQuery();
    DefaultTableModel model = (DefaultTableModel) tblCourses.getModel();

    // Clear any existing rows in the table
    while (model.getRowCount() > 0) {
        model.removeRow(0);
    }

    // Add rows from the result set to the table
    while (resultSet.next()) {
        Vector<String> row = new Vector<>();

        row.add(resultSet.getString("nuid"));
        row.add(resultSet.getString("name"));
        row.add(resultSet.getString("coursename"));
        row.add(resultSet.getString("year"));
        row.add(resultSet.getString("semester")); // Add the semester from the courses table
         // Add the year from the courses table
        // Add the course name from the courses table
        row.add(resultSet.getString("grade"));
        row.add(Integer.toString(resultSet.getInt("student_rank")));
        model.addRow(row);
    }

    resultSet.close();
    preparedStatement.close();
} catch (SQLException ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error retrieving course data.", "Error", JOptionPane.ERROR_MESSAGE);
}

    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourses = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));

        tblCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NUID", "Student Name", "Course", "Year", "Semester", "Grade", "Ranking"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourses);

        btnBack.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back (1).png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(null);
        btnBack.setBorderPainted(false);
        btnBack.setContentAreaFilled(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        MyCoursesJPanel mycourses = new MyCoursesJPanel(mainframe, selectedNUID);
        mainframe.setRightComponent(mycourses);
        
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCourses;
    // End of variables declaration//GEN-END:variables
}
