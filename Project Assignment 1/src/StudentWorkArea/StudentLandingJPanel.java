/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package StudentWorkArea;

import Database.DatabaseConnection;
import com.mysql.jdbc.Connection;

import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import ui.LandingJPanel;
import ui.MainJFrame;

/**
 *
 * @author Abhinav Uni
 */
public class StudentLandingJPanel extends javax.swing.JPanel {
    
    MainJFrame mainframe;
    private String selectedNUID;
    private static final double GPA_A = 4.0;
    private static final double GPA_B = 3.0;
    private static final double GPA_C = 2.0;
    private static final double GPA_D = 1.0;
    private static final double GPA_Fail = 0.0;
    private String graduated = "No";

    /**
     * Creates new form StudentLandingJPanel
     */
    public StudentLandingJPanel(MainJFrame mainframe,String selectedNUID) {
        this.selectedNUID = selectedNUID;
        initComponents();
        
        this.mainframe = mainframe;
        System.out.println(selectedNUID);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void calculateAndUpdateGPA(String nuid) {
    Connection connection = null;
    PreparedStatement selectStatement = null;
    PreparedStatement updateGPAStatement = null;
    PreparedStatement updateGraduationStatusStatement = null;
    PreparedStatement updateOverallRankStatement = null;

    try {
        connection = (Connection) DatabaseConnection.getConnection();
        connection.setAutoCommit(false); // Disable auto-commit to ensure transaction consistency

        // Step 1: Retrieve grades for the student
        String selectSql = "SELECT grade FROM coursesregistered WHERE nuid = ?";
        selectStatement = connection.prepareStatement(selectSql);
        selectStatement.setString(1, nuid);

        ResultSet resultSet = selectStatement.executeQuery();
        ArrayList<Double> gpaList = new ArrayList<>();

        while (resultSet.next()) {
            String grade = resultSet.getString("grade");
            // Check the grade and calculate GPA
            if (grade != null) {
                switch (grade) {
                    case "A":
                        gpaList.add(GPA_A);
                        break;
                    case "B":
                        gpaList.add(GPA_B);
                        break;
                    case "C":
                        gpaList.add(GPA_C);
                        break;
                    case "D":
                        gpaList.add(GPA_D);
                        break;
                    case "Fail":
                        gpaList.add(GPA_Fail);
                        break;
                    // Handle other cases as needed
                }
            }
        }

        // Step 2: Check the number of grades
        if (gpaList.size() < 8) {
            // Rollback the transaction if the student is not ready to graduate
            connection.rollback();
            JOptionPane.showMessageDialog(null, "You are not ready to graduate.");
            return;
        }

        // Step 3: Calculate the GPA
        Collections.sort(gpaList, Collections.reverseOrder());
        double averageGPA = 0.0;
        for (int i = 0; i < 8; i++) {
            averageGPA += gpaList.get(i);
        }
        averageGPA /= 8;

        // Step 4: Update the student's GPA in the "student" table
        String updateGpaSql = "UPDATE student2 SET gpa = ? WHERE nuid = ?";
        updateGPAStatement = connection.prepareStatement(updateGpaSql);
        updateGPAStatement.setDouble(1, averageGPA);
        updateGPAStatement.setString(2, nuid);

        int rowsUpdated = updateGPAStatement.executeUpdate();

        if (rowsUpdated > 0) {
            // Step 5: Update graduation status to "Graduated"
            String updateGraduationStatusSql = "UPDATE student2 SET graduation_status = 'Graduated' WHERE nuid = ?";
            updateGraduationStatusStatement = connection.prepareStatement(updateGraduationStatusSql);
            updateGraduationStatusStatement.setString(1, nuid);

            int graduationStatusUpdated = updateGraduationStatusStatement.executeUpdate();

            if (graduationStatusUpdated > 0) {
                // Step 6: Calculate overall rank and update it
                String selectRankSql = "SELECT COUNT(*) AS overallrank FROM student2 WHERE gpa >= ?";
                PreparedStatement selectRankStatement = connection.prepareStatement(selectRankSql);
                selectRankStatement.setDouble(1, averageGPA);

                ResultSet rankResultSet = selectRankStatement.executeQuery();

                int overallRank = 1;
                if (rankResultSet.next()) {
                    overallRank = rankResultSet.getInt("overallrank");
                }

                String updateOverallRankSql = "UPDATE student2 SET overall_rank = ? WHERE nuid = ?";
                updateOverallRankStatement = connection.prepareStatement(updateOverallRankSql);
                updateOverallRankStatement.setInt(1, overallRank);
                updateOverallRankStatement.setString(2, nuid);

                int overallRankUpdated = updateOverallRankStatement.executeUpdate();

                if (overallRankUpdated > 0) {
                    // Commit the transaction
                    connection.commit();
                    JOptionPane.showMessageDialog(null, "GPA, graduation status, and overall rank updated successfully.");
                    graduated = "Yes";
                } else {
                    // Rollback the transaction if overall rank update fails
                    connection.rollback();
                    JOptionPane.showMessageDialog(null, "Failed to update overall rank.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                // Rollback the transaction if graduation status update fails
                connection.rollback();
                JOptionPane.showMessageDialog(null, "Failed to update graduation status.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Rollback the transaction if GPA update fails
            connection.rollback();
            JOptionPane.showMessageDialog(null, "Failed to update GPA.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error updating GPA, graduation status, or overall rank.", "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        try {
            if (updateGPAStatement != null) {
                updateGPAStatement.close();
            }
            if (updateGraduationStatusStatement != null) {
                updateGraduationStatusStatement.close();
            }
            if (updateOverallRankStatement != null) {
                updateOverallRankStatement.close();
            }
            if (selectStatement != null) {
                selectStatement.close();
            }
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFindCourses = new javax.swing.JButton();
        btnMyCourses = new javax.swing.JButton();
        btnMyProfile = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnMyTranscript = new javax.swing.JButton();
        btnGradute = new javax.swing.JButton();
        btnSkills = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));

        btnFindCourses.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnFindCourses.setForeground(new java.awt.Color(0, 102, 102));
        btnFindCourses.setText("Find Courses");
        btnFindCourses.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnFindCourses.setBorderPainted(false);
        btnFindCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindCoursesActionPerformed(evt);
            }
        });

        btnMyCourses.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnMyCourses.setForeground(new java.awt.Color(0, 102, 102));
        btnMyCourses.setText("My Courses");
        btnMyCourses.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMyCourses.setBorderPainted(false);
        btnMyCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyCoursesActionPerformed(evt);
            }
        });

        btnMyProfile.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnMyProfile.setForeground(new java.awt.Color(0, 102, 102));
        btnMyProfile.setText("My Profile");
        btnMyProfile.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMyProfile.setBorderPainted(false);
        btnMyProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyProfileActionPerformed(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(255, 0, 0));
        btnLogout.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnLogout.setText("Logout");
        btnLogout.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLogout.setBorderPainted(false);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnMyTranscript.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnMyTranscript.setForeground(new java.awt.Color(0, 102, 102));
        btnMyTranscript.setText("Transcript");
        btnMyTranscript.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMyTranscript.setBorderPainted(false);
        btnMyTranscript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyTranscriptActionPerformed(evt);
            }
        });

        btnGradute.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnGradute.setForeground(new java.awt.Color(0, 102, 102));
        btnGradute.setText("Gradute");
        btnGradute.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGradute.setBorderPainted(false);
        btnGradute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraduteActionPerformed(evt);
            }
        });

        btnSkills.setFont(new java.awt.Font("Segoe UI Variable", 1, 13)); // NOI18N
        btnSkills.setForeground(new java.awt.Color(0, 102, 102));
        btnSkills.setText("Add Skills");
        btnSkills.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSkills.setBorderPainted(false);
        btnSkills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkillsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnMyProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSkills, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMyCourses, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMyTranscript, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGradute, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFindCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMyCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMyProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMyTranscript, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGradute, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSkills, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        
        LandingJPanel landingpage = new LandingJPanel(mainframe);
        mainframe.setRightComponent(landingpage);
        
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnFindCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindCoursesActionPerformed
        // TODO add your handling code here:
        
        RegisterCoursesJPanel regcos = new RegisterCoursesJPanel(mainframe,selectedNUID);
        mainframe.setRightComponent(regcos);
    }//GEN-LAST:event_btnFindCoursesActionPerformed

    private void btnMyCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyCoursesActionPerformed
        // TODO add your handling code here:
        
        myStudentCoursesJPanel courses = new myStudentCoursesJPanel(mainframe,selectedNUID);
        mainframe.setRightComponent(courses);
        
    }//GEN-LAST:event_btnMyCoursesActionPerformed

    private void btnMyProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyProfileActionPerformed
        // TODO add your handling code here:
        
        ViewStudentJPanel stuprofile = new ViewStudentJPanel(mainframe,selectedNUID);
        mainframe.setRightComponent(stuprofile);
        
    }//GEN-LAST:event_btnMyProfileActionPerformed

    private void btnMyTranscriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyTranscriptActionPerformed
        // TODO add your handling code here:
        
        TranscriptJPanel mytranscript = new TranscriptJPanel(mainframe);
        mainframe.setRightComponent(mytranscript);
    }//GEN-LAST:event_btnMyTranscriptActionPerformed

    private void btnGraduteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraduteActionPerformed
        // TODO add your handling code here:
        calculateAndUpdateGPA(selectedNUID);
        if(graduated.equals("Yes")){
        StudentTranscriptJPanel transcript = new StudentTranscriptJPanel(mainframe,selectedNUID);
        mainframe.setRightComponent(transcript);
        }
        
    }//GEN-LAST:event_btnGraduteActionPerformed

    private void btnSkillsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkillsActionPerformed
        // TODO add your handling code here:
        AddSkillsJPanel skills = new AddSkillsJPanel(mainframe,selectedNUID);
        mainframe.setRightComponent(skills);
    }//GEN-LAST:event_btnSkillsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFindCourses;
    private javax.swing.JButton btnGradute;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMyCourses;
    private javax.swing.JButton btnMyProfile;
    private javax.swing.JButton btnMyTranscript;
    private javax.swing.JButton btnSkills;
    // End of variables declaration//GEN-END:variables
}
